apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deploy
  labels:
    app: nginx
spec:
  replicas: 10
  revisionHistoryLimit: 1
  strategy:
    rollingUpdate:
      maxSurge: 10%
      maxUnavailable: 10%
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: therafk/httpd:1.1 # nginx:latest
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "200m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        readinessProbe:
          httpGet:
            path: / # Path to check for readiness
            port: 80 # Port to check for readiness
          initialDelaySeconds: 15 # simulate long startup time
          periodSeconds: 10 # How often to perform the readiness check
          failureThreshold: 3 # Number of consecutive failures before marking the pod as not ready
          successThreshold: 1 # Number of consecutive successes before marking the pod as ready

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80 # The port the service will listen on
      targetPort: 80 # The port on the pod that the service will forward to
  type: ClusterIP # You can change this to NodePort or LoadBalancer depending on your needs
---
apiVersion: v1
kind: Pod
metadata:
  name: curl-pod
spec:
  containers:
  - name: curl
    image: curlimages/curl:latest # A lightweight image with curl pre-installed
    command: ["sleep", "infinity"] # Keep the pod running for a while so you can exec into it
    resources: {}
  restartPolicy: Never # Ensures the pod doesn't restart automatically after command finishes (if using a different command)


# kubectl exec -it curl-pod -- sh
# while true; do sleep 1; curl -s http://nginx-svc/ | grep "ver:" | xargs -I {} date "+%F %T {}"; done

