
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment5v3
  namespace: mysql-server
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mysql-server
      tier: database
  template:
    metadata:
      labels:
        app: mysql-server
        tier: database
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - eu-west-1a
      containers:
      - name: mysql
        image: mysql:8                  # defaults to >> 8.4.2 MySQL Community Server - GPL
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:                               #value: "sakila[]1"
            secretKeyRef:
              name: mysql-server-secrets
              key: mysqlRootPassword
        - name: MYSQL_USER
          valueFrom:                      #         value: "ibe"
            secretKeyRef:
              name: mysql-server-secrets
              key: mysqlUser          
        - name: MYSQL_PASSWORD
          valueFrom:                      #         value: "admin"
            secretKeyRef:
              name: mysql-server-secrets
              key: mysqlPassword 
        ports:
        - containerPort: 3306
        resources:
          requests:             # minimum required to deploy
            memory: "750Mi"
            cpu: "500m"
          limits:               # max resources pod can use
            memory: "2Gi"       # 1.5Gi or 2Gi
            cpu: "1"
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: config-volume
          mountPath: /etc/mysql/conf.d
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-server-pvc
      - name: config-volume
        configMap:
          name: mysql-server-cm      #x1
          items:
          - key: my.cnf           # key from configmap
            path: my.cnf          # filename created
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-server-pvc
  namespace: mysql-server
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: gp3-exp
  resources:
    requests:
      storage: 2Gi


# svc_name.namespace.svc.cluster.local

# To update config file
# [1] update ConfigMap
# [2] delete pod - it will recreate a ne one with new configuration
